---
// Calendar Booking Component for Shallow Bay Advisors
interface Props {
  title?: string;
  subtitle?: string;
  buttonText?: string;
  propertyId?: string;
  propertyTitle?: string;
}

const {
  title = "Schedule a Consultation",
  subtitle = "Book a call with our commercial real estate experts",
  buttonText = "Book Appointment",
  propertyId,
  propertyTitle
} = Astro.props;

// Available time slots (you can customize these)
const timeSlots = [
  "9:00 AM", "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM",
  "1:00 PM", "1:30 PM", "2:00 PM", "2:30 PM", "3:00 PM", "3:30 PM", "4:00 PM"
];

const appointmentTypes = [
  { value: "consultation", label: "Initial Consultation (30 min)", duration: 30 },
  { value: "property-viewing", label: "Property Viewing (45 min)", duration: 45 },
  { value: "portfolio-review", label: "Portfolio Review (60 min)", duration: 60 },
  { value: "market-analysis", label: "Market Analysis (45 min)", duration: 45 }
];
---

<div class="p-0">
  <!-- Header (only show if title exists) -->
  {title && (
    <div class="mb-8 text-center">
      <h3 class="text-2xl font-semibold text-sba-navy mb-3">
        {title}
      </h3>
      {subtitle && (
        <p class="text-gray-600 text-lg">
          {subtitle}
        </p>
      )}
    </div>
  )}

  <!-- Calendar Booking Form -->
  <form id="calendar-booking-form" class="space-y-8">
    <!-- Contact Information -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      <div>
        <label for="booking-name" class="block text-sm font-semibold text-sba-navy mb-3">
          Full Name *
        </label>
        <input
          type="text"
          id="booking-name"
          name="name"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
          placeholder="Your name"
        />
      </div>
      <div>
        <label for="booking-email" class="block text-sm font-semibold text-sba-navy mb-3">
          Email Address *
        </label>
        <input
          type="email"
          id="booking-email"
          name="email"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
          placeholder="your@email.com"
        />
      </div>
      <div>
        <label for="booking-phone" class="block text-sm font-semibold text-sba-navy mb-3">
          Phone Number *
        </label>
        <input
          type="tel"
          id="booking-phone"
          name="phone"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
          placeholder="(555) 123-4567"
        />
      </div>
      <div>
        <label for="booking-company" class="block text-sm font-semibold text-sba-navy mb-3">
          Company
        </label>
        <input
          type="text"
          id="booking-company"
          name="company"
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
          placeholder="Company name"
        />
      </div>
    </div>

    <!-- Appointment Details Row -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      <!-- Appointment Type -->
      <div>
        <label for="appointment-type" class="block text-sm font-semibold text-sba-navy mb-3">
          Appointment Type *
        </label>
        <select
          id="appointment-type"
          name="appointment_type"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
        >
          <option value="">Select appointment type...</option>
          {appointmentTypes.map(type => (
            <option value={type.value} data-duration={type.duration}>
              {type.label}
            </option>
          ))}
        </select>
      </div>

      <!-- Date Selection -->
      <div>
        <label for="appointment-date" class="block text-sm font-semibold text-sba-navy mb-3">
          Preferred Date *
        </label>
        <input
          type="date"
          id="appointment-date"
          name="appointment_date"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
        />
      </div>

      <!-- Time Selection -->
      <div>
        <label for="appointment-time" class="block text-sm font-semibold text-sba-navy mb-3">
          Preferred Time *
        </label>
        <select
          id="appointment-time"
          name="appointment_time"
          required
          class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg transition-all duration-300 hover:bg-white"
        >
          <option value="">Select time...</option>
          {timeSlots.map(time => (
            <option value={time}>{time}</option>
          ))}
        </select>
      </div>
    </div>

    <!-- Hidden Property Tracking (invisible to user) -->
    {propertyId && (
      <div>
        <input type="hidden" name="property_id" value={propertyId} />
        <input type="hidden" name="property_title" value={propertyTitle} />
        <input type="hidden" name="property_interest" value={`Property Interest - Regarding: ${propertyTitle}`} />
      </div>
    )}

    <!-- Message -->
    <div>
      <label for="booking-message" class="block text-sm font-semibold text-sba-navy mb-3">
        Additional Details
      </label>
      <textarea
        id="booking-message"
        name="message"
        rows="4"
        class="w-full px-5 py-4 rounded-2xl border-2 border-gray-200/50 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white/80 backdrop-blur-sm text-lg resize-none transition-all duration-300 hover:bg-white"
        placeholder="Tell us about your requirements or any specific questions..."
      ></textarea>
    </div>

    <!-- Submit Button -->
    <div class="flex justify-center pt-4">
      <button
        type="submit"
        id="booking-submit-btn"
        class="px-12 py-5 bg-gradient-to-r from-sba-navy to-sba-navy-dark text-white rounded-2xl font-bold text-xl hover:from-sba-navy-dark hover:to-slate-900 focus:outline-none focus:ring-4 focus:ring-sba-navy/30 transition-all duration-300 disabled:opacity-50 shadow-xl hover:shadow-2xl transform hover:-translate-y-1"
      >
        <span class="submit-text">{buttonText}</span>
        <span class="loading-text hidden">Booking Appointment...</span>
      </button>
    </div>

    <!-- Success Message -->
    <div id="booking-success" class="hidden bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 text-center">
      <div class="w-12 h-12 bg-green-100 dark:bg-green-900/40 rounded-full flex items-center justify-center mx-auto mb-4">
        <svg class="w-6 h-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
        </svg>
      </div>
      <h3 class="text-lg font-semibold text-green-900 dark:text-green-100 mb-2">Appointment Booked!</h3>
      <p class="text-green-700 dark:text-green-300">
        We've received your appointment request and will send you a confirmation email with all the details shortly.
      </p>
    </div>
  </form>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Set minimum date to today
    const dateInput = document.getElementById('appointment-date');
    if (dateInput) {
      const today = new Date().toISOString().split('T')[0];
      dateInput.min = today;

      // Set default to 3 days from now to encourage advance booking
      const defaultDate = new Date();
      defaultDate.setDate(defaultDate.getDate() + 3);
      dateInput.value = defaultDate.toISOString().split('T')[0];
    }

    // Handle form submission
    const form = document.getElementById('calendar-booking-form');
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const submitBtn = document.getElementById('booking-submit-btn');
        const submitText = submitBtn.querySelector('.submit-text');
        const loadingText = submitBtn.querySelector('.loading-text');
        const successDiv = document.getElementById('booking-success');

        // Show loading state
        submitBtn.disabled = true;
        submitText.classList.add('hidden');
        loadingText.classList.remove('hidden');

        try {
          // Collect form data
          const formData = new FormData(form);
          const data = Object.fromEntries(formData.entries());

          // Add appointment-specific metadata
          data.source = 'calendar_booking';
          data.type = 'consultation';
          data.lead_source = 'appointment_booking';

          // Submit to CRM function
          const response = await fetch('/.netlify/functions/process-appointment', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          if (response.ok) {
            // Show success message
            form.classList.add('hidden');
            successDiv.classList.remove('hidden');

            // Scroll to success message
            successDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
          } else {
            throw new Error('Booking failed');
          }
        } catch (error) {
          console.error('Error booking appointment:', error);
          alert('There was an error booking your appointment. Please try again or call us directly at (954) 937-9667.');

          // Reset button state
          submitBtn.disabled = false;
          submitText.classList.remove('hidden');
          loadingText.classList.add('hidden');
        }
      });
    }
  });
</script>