---
// Calendar Booking Component for Shallow Bay Advisors
interface Props {
  title?: string;
  subtitle?: string;
  buttonText?: string;
  propertyId?: string;
  propertyTitle?: string;
}

const {
  title = "Schedule a Consultation",
  subtitle = "Book a call with our commercial real estate experts",
  buttonText = "Book Appointment",
  propertyId,
  propertyTitle
} = Astro.props;

// Available time slots (you can customize these)
const timeSlots = [
  "9:00 AM", "9:30 AM", "10:00 AM", "10:30 AM", "11:00 AM", "11:30 AM",
  "1:00 PM", "1:30 PM", "2:00 PM", "2:30 PM", "3:00 PM", "3:30 PM", "4:00 PM"
];

// Properties organized by county and sorted by size for easy navigation
const propertiesByCounty = {
  "Miami-Dade": [
    { id: "cold-storage-miami-beach", title: "Cold Storage Facility - Miami Beach, FL", size: "35,000 SF", sizeValue: 35000 },
    { id: "prime-warehouse-hialeah", title: "Prime Warehouse Space - Hialeah, FL", size: "45,000 SF", sizeValue: 45000 },
    { id: "modern-distribution-center-doral", title: "Modern Distribution Center - Doral, FL", size: "85,000 SF", sizeValue: 85000 },
    { id: "manufacturing-facility-miami", title: "Manufacturing Facility - Miami, FL", size: "120,000 SF", sizeValue: 120000 }
  ],
  "Broward": [
    { id: "flex-industrial-pompano", title: "Flex Industrial Space - Pompano Beach, FL", size: "25,000 SF", sizeValue: 25000 },
    { id: "port-access-dania-beach", title: "Port Access Facility - Dania Beach, FL", size: "60,000 SF", sizeValue: 60000 },
    { id: "distribution-warehouse-hollywood", title: "Distribution Warehouse - Hollywood, FL", size: "75,000 SF", sizeValue: 75000 },
    { id: "logistics-hub-ft-lauderdale", title: "Logistics Hub - Fort Lauderdale, FL", size: "95,000 SF", sizeValue: 95000 }
  ],
  "Palm Beach": [
    { id: "industrial-complex-boca", title: "Industrial Complex - Boca Raton, FL", size: "65,000 SF", sizeValue: 65000 },
    { id: "multi-use-west-palm", title: "Multi-Use Industrial - West Palm Beach, FL", size: "80,000 SF", sizeValue: 80000 },
    { id: "distribution-center-boynton", title: "Distribution Center - Boynton Beach, FL", size: "90,000 SF", sizeValue: 90000 },
    { id: "tech-manufacturing-delray", title: "Tech Manufacturing Hub - Delray Beach, FL", size: "110,000 SF", sizeValue: 110000 }
  ]
};
---

<div class="p-0">
  <!-- Header (only show if title exists) -->
  {title && (
    <div class="mb-8 text-center">
      <h3 class="text-2xl font-semibold text-sba-navy mb-3">
        {title}
      </h3>
      {subtitle && (
        <p class="text-gray-600 text-lg">
          {subtitle}
        </p>
      )}
    </div>
  )}

  <!-- Calendar Booking Form -->
  <form id="calendar-booking-form" class="space-y-6">
    <!-- Contact Information -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        <label for="booking-name" class="block text-sm font-medium text-gray-700 mb-2">
          Full Name *
        </label>
        <input
          type="text"
          id="booking-name"
          name="name"
          required
          class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          placeholder="Your name"
        />
      </div>
      <div>
        <label for="booking-email" class="block text-sm font-medium text-gray-700 mb-2">
          Email Address *
        </label>
        <input
          type="email"
          id="booking-email"
          name="email"
          required
          class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          placeholder="your@email.com"
        />
      </div>
      <div>
        <label for="booking-phone" class="block text-sm font-medium text-gray-700 mb-2">
          Phone Number *
        </label>
        <input
          type="tel"
          id="booking-phone"
          name="phone"
          required
          class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          placeholder="(555) 123-4567"
        />
      </div>
      <div>
        <label for="booking-company" class="block text-sm font-medium text-gray-700 mb-2">
          Company
        </label>
        <input
          type="text"
          id="booking-company"
          name="company"
          class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          placeholder="Company name"
        />
      </div>
    </div>

    <!-- Appointment Details Row -->
    <div class="space-y-4">
      <!-- Property Selection -->
      <div>
        <label for="property-selection" class="block text-sm font-medium text-gray-700 mb-2">
          Property to View *
        </label>
        <select
          id="property-selection"
          name="property_id"
          required
          class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300 appearance-none"
        >
          <option value="">Select a property to tour...</option>
          {Object.entries(propertiesByCounty).map(([county, properties]) => (
            <optgroup label={`${county} County`}>
              {properties.map(property => (
                <option value={property.id}>
                  {property.title} ({property.size})
                </option>
              ))}
            </optgroup>
          ))}
        </select>
      </div>

      <!-- Date and Time Row -->
      <div class="grid grid-cols-2 gap-4">
        <!-- Date Selection -->
        <div>
          <label for="appointment-date" class="block text-sm font-medium text-gray-700 mb-2">
            Preferred Date *
          </label>
          <input
            type="date"
            id="appointment-date"
            name="appointment_date"
            required
            class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          />
        </div>

        <!-- Time Selection -->
        <div>
          <label for="appointment-time" class="block text-sm font-medium text-gray-700 mb-2">
            Preferred Time *
          </label>
          <select
            id="appointment-time"
            name="appointment_time"
            required
            class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm transition-all duration-300"
          >
            <option value="">Select time...</option>
            {timeSlots.map(time => (
              <option value={time}>{time}</option>
            ))}
          </select>
        </div>
      </div>
    </div>

    <!-- Hidden Property Tracking (invisible to user) -->
    {propertyId && (
      <div>
        <input type="hidden" name="property_id" value={propertyId} />
        <input type="hidden" name="property_title" value={propertyTitle} />
        <input type="hidden" name="property_interest" value={`Property Interest - Regarding: ${propertyTitle}`} />
      </div>
    )}

    <!-- Message -->
    <div>
      <label for="booking-message" class="block text-sm font-medium text-gray-700 mb-2">
        Additional Details
      </label>
      <textarea
        id="booking-message"
        name="message"
        rows="3"
        class="w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-sba-navy/20 focus:border-sba-navy bg-white text-sm resize-none transition-all duration-300"
        placeholder="Tell us about your requirements..."
      ></textarea>
    </div>

    <!-- Submit Button -->
    <div class="pt-4">
      <button
        type="submit"
        id="booking-submit-btn"
        class="w-full px-6 py-3 bg-sba-navy text-white rounded-lg font-semibold hover:bg-sba-navy-dark focus:outline-none focus:ring-4 focus:ring-sba-navy/30 transition-all duration-300 disabled:opacity-50"
      >
        <span class="submit-text">{buttonText}</span>
        <span class="loading-text hidden">Booking Appointment...</span>
      </button>
    </div>

    <!-- Success Message -->
    <div id="booking-success" class="hidden bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 text-center">
      <div class="w-12 h-12 bg-green-100 dark:bg-green-900/40 rounded-full flex items-center justify-center mx-auto mb-4">
        <svg class="w-6 h-6 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
        </svg>
      </div>
      <h3 class="text-lg font-semibold text-green-900 dark:text-green-100 mb-2">Appointment Booked!</h3>
      <p class="text-green-700 dark:text-green-300">
        We've received your appointment request and will send you a confirmation email with all the details shortly.
      </p>
    </div>
  </form>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', function() {
    // Set minimum date to today
    const dateInput = document.getElementById('appointment-date');
    if (dateInput) {
      const today = new Date().toISOString().split('T')[0];
      dateInput.min = today;

      // Set default to 3 days from now to encourage advance booking
      const defaultDate = new Date();
      defaultDate.setDate(defaultDate.getDate() + 3);
      dateInput.value = defaultDate.toISOString().split('T')[0];
    }

    // Handle form submission
    const form = document.getElementById('calendar-booking-form');
    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();

        const submitBtn = document.getElementById('booking-submit-btn');
        const submitText = submitBtn.querySelector('.submit-text');
        const loadingText = submitBtn.querySelector('.loading-text');
        const successDiv = document.getElementById('booking-success');

        // Show loading state
        submitBtn.disabled = true;
        submitText.classList.add('hidden');
        loadingText.classList.remove('hidden');

        try {
          // Collect form data
          const formData = new FormData(form);
          const data = Object.fromEntries(formData.entries());

          // Add appointment-specific metadata
          data.source = 'calendar_booking';
          data.type = 'property_showing';
          data.appointment_type = 'showing';
          data.lead_source = 'appointment_booking';

          // Add property title for reference
          const selectedProperty = document.getElementById('property-selection');
          if (selectedProperty && selectedProperty.value) {
            const propertyTitle = selectedProperty.options[selectedProperty.selectedIndex].text;
            data.property_title = propertyTitle;
          }

          // Submit to CRM function
          const response = await fetch('/.netlify/functions/process-appointment', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          });

          if (response.ok) {
            // Show success message
            form.classList.add('hidden');
            successDiv.classList.remove('hidden');

            // Scroll to success message
            successDiv.scrollIntoView({ behavior: 'smooth', block: 'center' });
          } else {
            throw new Error('Booking failed');
          }
        } catch (error) {
          console.error('Error booking appointment:', error);
          alert('There was an error booking your appointment. Please try again or call us directly at (954) 937-9667.');

          // Reset button state
          submitBtn.disabled = false;
          submitText.classList.remove('hidden');
          loadingText.classList.add('hidden');
        }
      });
    }
  });
</script>

<style>
  /* Select dropdown styling */
  select {
    appearance: none;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 12px center;
    background-repeat: no-repeat;
    background-size: 16px;
  }

  select:focus {
    outline: none;
  }
</style>