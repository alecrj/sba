---
// Mobile App Header - Airbnb Style
interface Props {
  title?: string;
  showBack?: boolean;
  showLogo?: boolean;
}

const {
  title,
  showBack = false,
  showLogo = true
} = Astro.props;
---

<!-- Mobile App Header -->
<header id="mobile-header" class="fixed top-0 left-0 right-0 z-40 bg-white border-b border-gray-100 sm:hidden safe-area-top transition-all duration-300 ease-in-out">
  <div class="flex items-center justify-center px-4 h-14 relative">

    <!-- Left: Back Button (if needed) -->
    {showBack && (
      <div class="absolute left-4">
        <button onclick="history.back()" class="p-2 text-gray-700 hover:bg-gray-100 rounded-full">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
        </button>
      </div>
    )}

    <!-- Center: Logo or Title -->
    {title ? (
      <h1 class="text-lg font-semibold text-gray-900">{title}</h1>
    ) : (
      <a href="/" class="flex items-center">
        <img
          src="/images/uploads/sba-transparent.png"
          alt="Shallow Bay Advisors"
          class="h-18 w-auto"
        />
      </a>
    )}

  </div>
</header>

<style>
  .safe-area-top {
    padding-top: env(safe-area-inset-top);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Mobile header scroll behavior (same as desktop nav)
    let lastScrollY = window.scrollY;
    const mobileHeader = document.getElementById('mobile-header');

    if (mobileHeader) {
      function updateMobileHeaderOnScroll() {
        const currentScrollY = window.scrollY;

        if (currentScrollY > lastScrollY && currentScrollY > 80) {
          // Scrolling down & past initial threshold - hide header
          mobileHeader.style.transform = 'translateY(-100%)';
        } else {
          // Scrolling up or at top - show header
          mobileHeader.style.transform = 'translateY(0)';
        }

        lastScrollY = currentScrollY;
      }

      // Throttle scroll events for performance
      let ticking = false;
      window.addEventListener('scroll', function() {
        if (!ticking) {
          requestAnimationFrame(updateMobileHeaderOnScroll);
          ticking = true;
          setTimeout(() => { ticking = false; }, 10);
        }
      });
    }
  });
</script>