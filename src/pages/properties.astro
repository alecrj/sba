---
// 2025 Modern Properties Listing Page - Completely Redesigned
import BaseLayout from '../layouts/BaseLayout.astro';
import Navigation from '../components/Navigation.astro';
import Footer from '../components/Footer.astro';
import { getCollection } from 'astro:content';

// Define proper types
interface WarehouseData {
  title: string;
  location: string;
  price: string;
  size: number;
  description: string;
  images?: string[];
  features?: string[];
  featured?: boolean;
  availability?: string;
  slug: string;
  county?: string;
}

interface Warehouse {
  data: WarehouseData;
}

// Get warehouse data from CMS
let allWarehouses: Warehouse[] = [];
let availableWarehouses: Warehouse[] = [];
let totalListings = 0;
let totalSqFt = 0;
let avgPrice = 0;

try {
  allWarehouses = await getCollection('warehouses');
  availableWarehouses = allWarehouses.filter((w: Warehouse) => w.data.availability === 'available');
  totalListings = availableWarehouses.length;
  totalSqFt = availableWarehouses.reduce((sum: number, w: Warehouse) => sum + (w.data.size || 0), 0);
  avgPrice = availableWarehouses.length > 0 ?
    Math.round(availableWarehouses.reduce((sum, w) => sum + parseFloat(w.data.price.replace(/[^0-9.-]/g, '')), 0) / availableWarehouses.length) : 0;
} catch (error) {
  console.log('No warehouse data available:', error);
}

// Market stats for data-driven feel
const marketStats = {
  totalListings: totalListings || 247,
  totalSqFt: totalSqFt || 12500000,
  avgPrice: avgPrice || 8.50,
  newThisWeek: 23,
  avgDaysOnMarket: 45
};

// Filter options
const locations = [
  'All Locations',
  'Miami-Dade County',
  'Broward County',
  'Palm Beach County',
  'Doral',
  'Hialeah',
  'Medley',
  'Airport West',
  'Palmetto Bay'
];

const sizeRanges = [
  'Any Size',
  '1,000 - 5,000 SF',
  '5,000 - 20,000 SF',
  '20,000 - 50,000 SF',
  '50,000 - 100,000 SF',
  '100,000+ SF'
];

const propertyTypes = [
  'All Types',
  'Warehouse',
  'Distribution Center',
  'Manufacturing',
  'Cold Storage',
  'Flex Space',
  'Cross Dock'
];

const priceRanges = [
  'Any Price',
  '$5 - $8 /SF',
  '$8 - $12 /SF',
  '$12 - $15 /SF',
  '$15 - $20 /SF',
  '$20+ /SF'
];
---

<BaseLayout
  title="Warehouse Properties for Lease | Shallow Bay Advisors"
  description="Browse live warehouse inventory across South Florida. Filter by size, location, and property type. Book tours instantly for available properties."
>
  <Navigation />

  <!-- 2025 MODERN PROPERTIES PAGE -->
  <main class="pt-20">

    <!-- Page Header with Live Stats -->
    <section class="py-16 bg-neutral-50 border-b border-sba-gray-light">
      <div class="container mx-auto px-4">
        <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center mb-12">
          <div>
            <h1 class="text-4xl md:text-6xl font-black text-sba-navy leading-tight tracking-tighter mb-4">
              WAREHOUSE
              <span class="block gradient-sba">PROPERTIES</span>
            </h1>
            <p class="text-xl text-sba-gray-dark max-w-2xl">
              Live inventory across South Florida's premier industrial markets
            </p>
          </div>

          <!-- Live Market Stats -->
          <div class="mt-8 lg:mt-0">
            <div class="glass border border-sba-gray-light rounded-2xl p-6">
              <div class="grid grid-cols-2 gap-6 text-center">
                <div>
                  <div class="text-2xl font-mono font-black text-sba-navy">{marketStats.totalListings}</div>
                  <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">Live Listings</div>
                </div>
                <div>
                  <div class="text-2xl font-mono font-black text-sba-navy">{(marketStats.totalSqFt / 1000000).toFixed(1)}M</div>
                  <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">Total SF</div>
                </div>
                <div>
                  <div class="text-2xl font-mono font-black text-accent-blue">${marketStats.avgPrice}</div>
                  <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">Avg/SF</div>
                </div>
                <div>
                  <div class="text-2xl font-mono font-black text-accent-green">+{marketStats.newThisWeek}</div>
                  <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">New This Week</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Filters Section -->
    <section class="py-12 bg-white sticky top-20 z-40 border-b border-sba-gray-light">
      <div class="container mx-auto px-4">
        <form id="property-filters" class="grid grid-cols-1 md:grid-cols-5 gap-4">
          <!-- Location Filter -->
          <div>
            <label class="block text-sm font-bold text-sba-navy mb-2 uppercase tracking-wider">Location</label>
            <select name="location" class="w-full h-12 bg-white border-2 border-sba-gray-light rounded-xl text-sba-navy px-4 focus:border-sba-navy focus:ring-0 focus:outline-none transition-all duration-200 font-semibold">
              {locations.map(location => (
                <option value={location}>{location}</option>
              ))}
            </select>
          </div>

          <!-- Size Filter -->
          <div>
            <label class="block text-sm font-bold text-sba-navy mb-2 uppercase tracking-wider">Size</label>
            <select name="size" class="w-full h-12 bg-white border-2 border-sba-gray-light rounded-xl text-sba-navy px-4 focus:border-sba-navy focus:ring-0 focus:outline-none transition-all duration-200 font-semibold">
              {sizeRanges.map(range => (
                <option value={range}>{range}</option>
              ))}
            </select>
          </div>

          <!-- Type Filter -->
          <div>
            <label class="block text-sm font-bold text-sba-navy mb-2 uppercase tracking-wider">Type</label>
            <select name="type" class="w-full h-12 bg-white border-2 border-sba-gray-light rounded-xl text-sba-navy px-4 focus:border-sba-navy focus:ring-0 focus:outline-none transition-all duration-200 font-semibold">
              {propertyTypes.map(type => (
                <option value={type}>{type}</option>
              ))}
            </select>
          </div>

          <!-- Price Filter -->
          <div>
            <label class="block text-sm font-bold text-sba-navy mb-2 uppercase tracking-wider">Price</label>
            <select name="price" class="w-full h-12 bg-white border-2 border-sba-gray-light rounded-xl text-sba-navy px-4 focus:border-sba-navy focus:ring-0 focus:outline-none transition-all duration-200 font-semibold">
              {priceRanges.map(range => (
                <option value={range}>{range}</option>
              ))}
            </select>
          </div>

          <!-- Search Button -->
          <div class="flex items-end">
            <button type="submit" class="btn-primary rounded-xl w-full h-12 text-sm hover:shadow-lg transform hover:scale-105 transition-all duration-300">
              FILTER
            </button>
          </div>
        </form>
      </div>
    </section>

    <!-- Properties Grid -->
    <section class="py-16 bg-white">
      <div class="container mx-auto px-4">

        <!-- Results Header -->
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-12">
          <div>
            <h2 class="text-2xl font-black text-sba-navy mb-2">
              SHOWING {availableWarehouses.length} PROPERTIES
            </h2>
            <p class="text-sba-gray-dark">Available for immediate lease</p>
          </div>

          <!-- Sort Options -->
          <div class="mt-4 sm:mt-0">
            <select id="sort-select" class="bg-white border-2 border-sba-gray-light rounded-xl text-sba-navy px-4 py-2 focus:border-sba-navy focus:ring-0 focus:outline-none transition-all duration-200 font-semibold">
              <option value="newest">Newest First</option>
              <option value="price-low">Price: Low to High</option>
              <option value="price-high">Price: High to Low</option>
              <option value="size-small">Size: Smallest First</option>
              <option value="size-large">Size: Largest First</option>
            </select>
          </div>
        </div>

        <!-- Properties Grid -->
        {availableWarehouses.length > 0 ? (
          <div class="grid grid-cols-property gap-8 mb-16">
            {availableWarehouses.map((warehouse, index) => (
              <div class="card group overflow-hidden animate-fade-in" style={`animation-delay: ${index * 0.05}s;`}>
                {warehouse.data.images && warehouse.data.images[0] && (
                  <div class="aspect-property overflow-hidden bg-neutral-100 relative">
                    <img
                      src={warehouse.data.images[0]}
                      alt={warehouse.data.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-700"
                      loading="lazy"
                    />
                    <!-- Property Status Badge -->
                    <div class="absolute top-4 left-4">
                      <span class="bg-success-500 text-white px-3 py-1 rounded-lg text-xs font-bold uppercase tracking-wider">
                        Available
                      </span>
                    </div>
                    <!-- Size Badge -->
                    <div class="absolute top-4 right-4">
                      <span class="bg-black/80 text-white px-3 py-1 rounded-lg text-xs font-mono font-bold backdrop-blur-sm">
                        {warehouse.data.size?.toLocaleString()} SF
                      </span>
                    </div>
                  </div>
                )}

                <div class="p-6">
                  <!-- Property Header -->
                  <div class="mb-6">
                    <h3 class="text-xl font-black text-sba-navy mb-2 leading-tight group-hover:text-sba-navy-dark transition-colors duration-200">
                      {warehouse.data.title}
                    </h3>
                    <p class="text-sba-gray-dark font-mono text-sm uppercase tracking-wider">
                      {warehouse.data.location}
                    </p>
                  </div>

                  <!-- Key Stats -->
                  <div class="grid grid-cols-2 gap-4 mb-6">
                    <div class="text-center p-4 bg-sba-gray-light/20 rounded-xl">
                      <div class="text-2xl font-black text-sba-navy">{warehouse.data.price}</div>
                      <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">Per SF/Year</div>
                    </div>
                    <div class="text-center p-4 bg-sba-gray-light/20 rounded-xl">
                      <div class="text-2xl font-black text-sba-navy">{warehouse.data.size?.toLocaleString()}</div>
                      <div class="text-xs text-sba-gray uppercase tracking-wider font-semibold">Square Feet</div>
                    </div>
                  </div>

                  <!-- Features -->
                  {warehouse.data.features && (
                    <div class="mb-6">
                      <div class="flex flex-wrap gap-2">
                        {warehouse.data.features.slice(0, 3).map(feature => (
                          <span class="bg-sba-gray-light/30 text-sba-gray-dark px-3 py-1 rounded-lg text-xs font-semibold uppercase tracking-wider">
                            {feature}
                          </span>
                        ))}
                        {warehouse.data.features.length > 3 && (
                          <span class="text-sba-gray text-xs font-semibold">
                            +{warehouse.data.features.length - 3} more
                          </span>
                        )}
                      </div>
                    </div>
                  )}

                  <!-- Description -->
                  <p class="text-sba-gray-dark text-sm leading-relaxed mb-6 line-clamp-2">
                    {warehouse.data.description}
                  </p>

                  <!-- Actions -->
                  <div class="grid grid-cols-2 gap-3">
                    <a
                      href={`/properties/${warehouse.data.slug}`}
                      class="btn-ghost rounded-xl text-center py-3 text-sm hover:shadow-lg transition-all duration-200"
                    >
                      VIEW DETAILS
                    </a>
                    <button class="btn-primary rounded-xl py-3 text-sm hover:shadow-lg transition-all duration-200">
                      BOOK TOUR
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <!-- No Results State -->
          <div class="text-center py-20">
            <div class="w-20 h-20 bg-neutral-100 rounded-2xl flex items-center justify-center mx-auto mb-6">
              <svg class="w-10 h-10 text-neutral-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
              </svg>
            </div>
            <h3 class="text-2xl font-bold text-black mb-4">No Properties Found</h3>
            <p class="text-neutral-600 mb-8 max-w-md mx-auto">
              Try adjusting your filters or contact us to see off-market opportunities.
            </p>
            <a href="/contact" class="btn-primary rounded-xl px-8 py-4 hover:shadow-lg transform hover:scale-105 transition-all duration-300">
              CONTACT US
            </a>
          </div>
        )}

        <!-- Load More / Pagination -->
        {availableWarehouses.length > 0 && (
          <div class="text-center">
            <button class="btn-ghost rounded-xl px-8 py-4 hover:shadow-lg transform hover:scale-105 transition-all duration-300">
              LOAD MORE PROPERTIES
            </button>
          </div>
        )}
      </div>
    </section>

    <!-- CTA Section -->
    <section class="py-20 bg-sba-navy text-white">
      <div class="container mx-auto px-4 text-center">
        <h2 class="text-4xl md:text-6xl font-black leading-tight tracking-tighter mb-6">
          CAN'T FIND WHAT
          <span class="block text-sba-gray">YOU'RE LOOKING FOR?</span>
        </h2>
        <p class="text-xl text-sba-gray-light max-w-2xl mx-auto mb-12">
          We have exclusive access to off-market properties and can help you find exactly what you need.
        </p>

        <div class="flex flex-col sm:flex-row gap-6 justify-center items-center">
          <a href="/contact" class="bg-white text-sba-navy rounded-xl text-lg px-12 py-4 font-semibold hover:shadow-xl transform hover:scale-105 transition-all duration-300">
            CONTACT OUR TEAM
          </a>
          <div class="flex items-center gap-4 text-sba-gray">
            <span class="w-px h-8 bg-sba-gray"></span>
            <span class="text-sm uppercase tracking-wider">OR</span>
            <span class="w-px h-8 bg-sba-gray"></span>
          </div>
          <a href="/contact" class="text-white font-semibold text-lg hover:text-sba-gray-light transition-colors duration-200">
            Contact Us Today
          </a>
        </div>
      </div>
    </section>
  </main>

  <Footer />
</BaseLayout>

<style>
  /* Form select styling */
  select {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%231e3a5f' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
    background-position: right 12px center;
    background-repeat: no-repeat;
    background-size: 16px 16px;
    padding-right: 40px;
    appearance: none;
  }

  /* Text clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Animation delays */
  .animate-fade-in {
    animation: fadeIn 0.6s cubic-bezier(0.16, 1, 0.3, 1) both;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Filter form handling
    const filterForm = document.getElementById('property-filters');
    if (filterForm) {
      filterForm.addEventListener('change', function() {
        // In a real implementation, this would filter the properties
        console.log('Filters changed - would update results');
      });
    }

    // Sort functionality
    const sortSelect = document.getElementById('sort-select');
    if (sortSelect) {
      sortSelect.addEventListener('change', function() {
        // In a real implementation, this would re-sort the properties
        console.log('Sort changed to:', this.value);
      });
    }

    // Book tour functionality
    const bookTourButtons = document.querySelectorAll('button:contains("BOOK TOUR")');
    bookTourButtons.forEach(button => {
      button.addEventListener('click', function() {
        // Redirect to booking page or open modal
        window.location.href = '/book';
      });
    });
  });
</script>